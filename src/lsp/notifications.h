// File generated by spec2cpp tool
// DO NOT MAKE ANY CHANGES HERE

#pragma once

#include "notificationmessage.h"
#include "types.h"

namespace Lsp {

inline constexpr char CancelRequestName[] = "$/cancelRequest";
struct CancelRequestNotification : public NotificationMessage<CancelRequestName, CancelParams>
{
};

inline constexpr char ProgressName[] = "$/progress";
struct ProgressNotification : public NotificationMessage<ProgressName, ProgressParams>
{
};

inline constexpr char InitializedName[] = "initialized";
struct InitializedNotification : public NotificationMessage<InitializedName, InitializedParams>
{
};

inline constexpr char ExitName[] = "exit";
struct ExitNotification : public NotificationMessage<ExitName, std::nullptr_t>
{
};

inline constexpr char LogTraceName[] = "$/logTrace";
struct LogTraceNotification : public NotificationMessage<LogTraceName, LogTraceParams>
{
};

inline constexpr char SetTraceName[] = "$/setTrace";
struct SetTraceNotification : public NotificationMessage<SetTraceName, SetTraceParams>
{
};

inline constexpr char ShowMessageName[] = "window/showMessage";
struct ShowMessageNotification : public NotificationMessage<ShowMessageName, ShowMessageParams>
{
};

inline constexpr char LogMessageName[] = "window/logMessage";
struct LogMessageNotification : public NotificationMessage<LogMessageName, LogMessageParams>
{
};

inline constexpr char WorkDoneProgressCancelName[] = "window/workDoneProgress/cancel";
struct WorkDoneProgressCancelNotification
    : public NotificationMessage<WorkDoneProgressCancelName, WorkDoneProgressCancelParams>
{
};

inline constexpr char TelemetryEventName[] = "telemetry/event";
struct TelemetryEventNotification : public NotificationMessage<TelemetryEventName, nlohmann::json>
{
};

inline constexpr char DidChangeWorkspaceFoldersName[] = "workspace/didChangeWorkspaceFolders";
struct DidChangeWorkspaceFoldersNotification
    : public NotificationMessage<DidChangeWorkspaceFoldersName, DidChangeWorkspaceFoldersParams>
{
};

inline constexpr char DidChangeConfigurationName[] = "workspace/didChangeConfiguration";
struct DidChangeConfigurationNotification
    : public NotificationMessage<DidChangeConfigurationName, DidChangeConfigurationParams>
{
};

inline constexpr char DidChangeWatchedFilesName[] = "workspace/didChangeWatchedFiles";
struct DidChangeWatchedFilesNotification
    : public NotificationMessage<DidChangeWatchedFilesName, DidChangeWatchedFilesParams>
{
};

inline constexpr char DidCreateFilesName[] = "workspace/didCreateFiles";
struct DidCreateFilesNotification : public NotificationMessage<DidCreateFilesName, CreateFilesParams>
{
};

inline constexpr char DidRenameFilesName[] = "workspace/didRenameFiles";
struct DidRenameFilesNotification : public NotificationMessage<DidRenameFilesName, RenameFilesParams>
{
};

inline constexpr char DidDeleteFilesName[] = "workspace/didDeleteFiles";
struct DidDeleteFilesNotification : public NotificationMessage<DidDeleteFilesName, DeleteFilesParams>
{
};

inline constexpr char DidOpenName[] = "textDocument/didOpen";
struct DidOpenNotification : public NotificationMessage<DidOpenName, DidOpenTextDocumentParams>
{
};

inline constexpr char DidChangeName[] = "textDocument/didChange";
struct DidChangeNotification : public NotificationMessage<DidChangeName, DidChangeTextDocumentParams>
{
};

inline constexpr char WillSaveName[] = "textDocument/willSave";
struct WillSaveNotification : public NotificationMessage<WillSaveName, WillSaveTextDocumentParams>
{
};

inline constexpr char DidSaveName[] = "textDocument/didSave";
struct DidSaveNotification : public NotificationMessage<DidSaveName, DidSaveTextDocumentParams>
{
};

inline constexpr char DidCloseName[] = "textDocument/didClose";
struct DidCloseNotification : public NotificationMessage<DidCloseName, DidCloseTextDocumentParams>
{
};

inline constexpr char PublishDiagnosticsName[] = "textDocument/publishDiagnostics";
struct PublishDiagnosticsNotification : public NotificationMessage<PublishDiagnosticsName, PublishDiagnosticsParams>
{
};
}
